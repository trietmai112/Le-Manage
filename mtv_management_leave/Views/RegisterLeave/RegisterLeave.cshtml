@using mtv_management_leave.Models.Entity;
@using Microsoft.AspNet.Identity;
@model mtv_management_leave.Models.RegisterLeave.RegisterLeaveRequest

@{
    UserInfo currentUser = Html.GetT<UserInfo>("account", "getuserinfo", Context.User.Identity.GetUserId<int>());
}
<div class="card">
    <div class="row">
        <div class="col-sm-6">
            <h4><b>@currentUser.FullName</b><small> (id: @currentUser.Id)</small></h4>
        </div>
        <div class="col-sm-6">
            <h5>
                Remaining number of days: <small>
                    (@(Html.GetT<double>("account", "GetLeaveRemining",
                 currentUser.Id)))
                </small>
            </h5>
        </div>

    </div>
    <div class="card-body register-leave-handle">
        <div class="container-fluid">
            @using (Html.BeginForm("RegisterLeave", "Registerleave"))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(false)
                @Html.HiddenFor(m => m.Uid)
                @Html.HiddenFor(m => m.IsToday, new { isTodayHidden = Model.IsToday })
                <label class="control-label">
                    <b>Infomation register</b>
                </label>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-3">
                            @Html.vRadio("One day", "leaveType", Model.IsToday, new { dataType = "md-hour" })
                        </div>
                        <div class="col-sm-9 leave-type" style="padding-top: 5px;">
                            <div class="col-sm-1 text-right"><label class="control-label">From</label> </div>
                            <div class="col-sm-6 md-date md-date-from">
                                @(
                                    Html.vDateTimePickerFor(m => m.DateStart)
                                    .SetViewMode(mtv_management_leave.Lib.Common.DateTimePickerViewMode.Date)
                                    .HiddenLabel()
                                    .OnChangeJQuery("dateFromChange")
                                    .ToHtml()
                                )
                            </div>
                            <div class="col-sm-4 md-hour md-hour-from" @Html.Raw(!Model.IsToday ? "style='display: none;'" : "")>
                                @(
                                    Html.vDateTimePickerFor(m => m.DateStart_Time)
                                    .SetViewMode(mtv_management_leave.Lib.Common.DateTimePickerViewMode.Time)
                                    .HiddenLabel()
                                    .ToHtml()
                                )
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="col-sm-3">
                            @Html.vRadio("Several days", "leaveType", !Model.IsToday, new { dataType = "md-date" })
                        </div>
                        <div class="col-sm-9 leave-type" style="padding-top: 5px;">
                            <div class="col-sm-1 text-right">To</div>
                            <div class="col-sm-6 md-date md-date-to">
                                @(
                                    Html.vDateTimePickerFor(m => m.DateEnd, new { attReadonly = true, @class="date-from" })
                                    .SetViewMode(mtv_management_leave.Lib.Common.DateTimePickerViewMode.Date)
                                    .HiddenLabel()
                                    .ToHtml()
                                )
                            </div>
                            <div class="col-sm-4 md-hour md-hour-to" @Html.Raw(!Model.IsToday ? "style='display: none;'" : "")>
                                @(
                                    Html.vDateTimePickerFor(m=> m.DateEnd_Time)
                                    .SetViewMode(mtv_management_leave.Lib.Common.DateTimePickerViewMode.Time)
                                    .HiddenLabel()
                                    .ToHtml()
                                )
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    @(Html.vDropDownListFor(m => m.LeaveTypeId, Html.GetT<IEnumerable<SelectListItem>>("system", "LeaveTypeToDropdown")))
                </div>
                <div class="row">
                    @Html.vTextAreaFor(m => m.Reason)
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    var dateFromChange = function (e) {
        if ($("[name=IsToday]").val() == "True") {
            $("#modalRegisterLeave [name=DateEnd]").data("DateTimePicker").date(e.val());
            //$("#modalRegisterLeave [name=DateEnd]").val(e.val());
        }
    };

    //$(".md-hour-from .time-picker").datetimepicker({
    //    format: "LT", stepping: 15, useCurrent: false
    //});

    //$(".md-hour-to .time-picker").datetimepicker({
    //    format: "LT", stepping: 15, useCurrent: false
    //});

    //$(".leave-type .date-picker").datetimepicker({ format: "MM/DD/YYYY", useCurrent: false });
    $('.modal-body .selectpicker').selectpicker('render');


    var setDefaultDateTime = function () {
        $("#modalRegisterLeave [name=DateStart_Time]").data("DateTimePicker").date('@Model.DateStart_Time.ToString("HH:mm:ss")');
        $("#modalRegisterLeave [name=DateStart]").data("DateTimePicker").date(new Date('@Model.DateStart.ToString("MM-dd-yyyy")'));

        $("#modalRegisterLeave [name=DateEnd_Time]").data("DateTimePicker").date('@Model.DateEnd_Time.ToString("HH:mm:ss")');
        $("#modalRegisterLeave [name=DateEnd]").data("DateTimePicker").date(new Date('@Model.DateEnd.ToString("MM-dd-yyyy")'));

        @*$(".md-hour-from .time-picker").data("DateTimePicker").date('@Model.DateStart.ToString("HH:mm:ss")');
        $(".md-date-from .date-picker").data("DateTimePicker").date(new Date('@Model.DateStart.ToString("MM-dd-yyyy")'));

        $(".md-hour-to .time-picker").data("DateTimePicker").date('@Model.DateEnd.ToString("HH:mm:ss")');
        $(".md-date-to .date-picker").data("DateTimePicker").date(new Date('@Model.DateEnd.ToString("MM-dd-yyyy")'));*@
    }
    $(document).ready(function () {
        setDefaultDateTime();
        $("body").on("change", ".register-leave-handle input[type=radio]", function (e) {
            e.preventDefault();
            debugger;
            var type = $(this).attr("datatype");
            if ($("[name=IsToday]").val() == "False") {
                $("#modalRegisterLeave [name=DateEnd]").data("DateTimePicker").date($("#modalRegisterLeave [name=DateStart]").val());
            }
            if (type == "md-hour") {
                $(".leave-type .md-hour").css({ "display": "block" });
                $(".leave-type .md-date").css({ "display": "block" });
                $("#modalRegisterLeave [name=DateEnd]").attr("readonly", "true");
                $("#IsToday").val("True");
            }
            else if (type == "md-date") {
                $(".leave-type .md-hour").css({ "display": "none" });
                $(".leave-type .md-date").css({ "display": "block" });
                $("#modalRegisterLeave [name=DateEnd]").removeAttr("readonly");
                $("#IsToday").val("False");
            }
            //setDefaultDateTime();
        });
    })
</script>

