
@using mtv_management_leave.Models.LeaveBonus
@model SearchRequest
@{
    ViewBag.Title = "Management list of Compensating";
}

<div class="card">
    <div class="card-header">
        <h2>@ViewBag.Title<small>Management list request change inout of user</small></h2>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">

                <div class="col-sm-2">
                    @Html.vDateTimePickerFor(m => m.DateStart).SetViewMode(mtv_management_leave.Lib.Common.DateTimePickerViewMode.Date).ToHtml()
                </div>
                <div class="col-sm-2">
                    @Html.vDateTimePickerFor(m => m.DateEnd).SetViewMode(mtv_management_leave.Lib.Common.DateTimePickerViewMode.Date).ToHtml()
                </div>
                <div class="col-sm-4">
                    @Html.vDropDownListFor(m => m.Uids, Html.GetT<List<SelectListItem>>("system", "UserToDropdown"), true, true)
                </div>
                <div class="col-sm-4">
                    <button class="btn btn-default" id="btn-search"><i class="zmdi zmdi-search"></i> Search</button>
                    <button class="btn btn-primary" id="btn-approve"><i class="zmdi zmdi-plus"></i> Approve</button>
                    <button class="btn btn-danger" id="btn-reject"><i class="zmdi zmdi-delete"></i> DisApprove</button>
                </div>
            </div>
        </div>
        @(Html.vBootGridFor()
        .SetName("request-compensating-table")
        .AddAjaxParameter(typeof(SearchRequest))
        .AddColumnRange(
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Id", FormatJqueryHandler = "validRow", Identify = true, MappingFrom = "Id" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Uid", FormatJqueryHandler = "validRow", Identify = true, MappingFrom = "Uid" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Full name", FormatJqueryHandler = "validRow", MappingFrom = "FullName" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Date", FormatJqueryHandler = "validRowDate", MappingFrom = "DateAdd" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Hour", FormatJqueryHandler = "validRow", MappingFrom = "AddLeaveHour" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Status", FormatJqueryHandler = "validRow", MappingFrom = "Status" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Reason", FormatJqueryHandler = "validRow", MappingFrom = "Reason" }
            
        )
        .ToHtml()
        )
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $("#btn-search").click(function (e) {
            e.preventDefault();
            reloadGrid();
        });

        var reloadGrid = function () {
            console.log("triet" +  $("[name=Uids]").val());
            var option = {
                url: '/compensatingManagement/tolist',
                type: 'POST',
                data: { DateStart: $("input[name=DateStart]").val(), DateEnd: $("input[name=DateEnd]").val(), Uids: $("[name=Uids]").val() }
            };
            $.ajax(option).done(function (data) {
                $("#request-compensating-table").bootgrid("clear");
                if ($.isArray(data.rows)) {
                    $("#request-compensating-table").bootgrid("append", data.rows);
                }
            }).error(function (jhx) {
                showAjaxError(jhx);
            });
        }

        $("#btn-approve").click(function (e) {
            e.preventDefault();
            toogle("/compensatingManagement/approve");
        })
        $("#btn-reject").click(function (e) {
            e.preventDefault();
            toogle("/compensatingManagement/disApprove");
        })
        var validRow = function (col, row) {
            return row[col.id];
        };

        var validRowDate = function (col, row) {
            return dateConvert(row[col.id]);
        }


        var toogle = function (urlCallback) {
            var selectedIds = $("#request-compensating-table").bootgrid("getSelectedRows");
            if (selectedIds.length == 0) return;
            swal({
                title: "Confirm!",
                type: "info",
                text: "Do you want continue?",
                showCloseButton: true,
                showCancelButton: true,
                showConfirmButton: true,
                allowOutsideClick: true,
                showLoaderOnConfirm: true
            }).then(
                function () {

                    var option = {
                        url: urlCallback,
                        data: { Ids: selectedIds },
                        type: "POST"
                    };
                    $.ajax(option)
                        .done(function (data) {
                            notify("Your request has complete.", "success");
                        })
                        .error(function (jhx) {
                            showAjaxError(jhx);
                        })
                },
                // handling the promise rejection
                function (dismiss) {
                    console.log("swal confirm closed");
                });
        }
    </script>
}