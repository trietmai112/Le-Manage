@using mtv_management_leave.Models.RegisterLeave
@model SearchRequest
@{
    ViewBag.Title = "Leave management";
}

<div class="card">
    <div class="card-header">
        <h2>@ViewBag.Title<small>You can check all register leave at here</small></h2>
    </div>
    <div class="card-body">
        <div class="row">
            @Html.HiddenFor(m => m.Uid)
            <div class="col-sm-12">
                @Html.vDatePickerFor(m => m.DateStart).Wrap("div", new { @class = "col-sm-2" })
                @Html.vDatePickerFor(m => m.DateEnd).Wrap("div", new { @class = "col-sm-2" })

                <div class="col-sm-4">
                    @Html.vDropDownListFor(m => m.Uids, Html.GetT<List<SelectListItem>>("system", "UserToDropdown") , true, true)
                </div>                

                <div class="col-sm-4">
                    <button class="btn btn-default" id="btn-search"><i class="zmdi zmdi-search"></i> Search</button>
                    <button class="btn btn-primary" id="btn-approve"><i class="zmdi zmdi-star"></i> Approve</button>
                    <button class="btn btn-danger" id="btn-disapprove"><i class="zmdi zmdi-star"></i> DisApprove</button>
                </div>
            </div>
            
        </div>
    </div>
    @(Html.vBootGridFor()
        .SetName("register-leave-table")
        .SetAjaxUrl("/leavemanagement/tolist")
        .AddAjaxParameter(typeof(SearchRequest))
        .AddColumnRange(
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Id", Identify = true, MappingFrom = "Uid" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Full name", FormatJqueryHandler = "validRow", MappingFrom = "FullName" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "From", FormatJqueryHandler = "validRow", MappingFrom = "LeaveFrom" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "To", FormatJqueryHandler = "validRow", MappingFrom = "LeaveTo" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Leave Type", FormatJqueryHandler = "validRow", MappingFrom = "LeaveTypeName" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Hours", FormatJqueryHandler = "validRow", MappingFrom = "RegisterHour" },
            new BootGridColumnOption { Sortable = false, ColumnHeaderName = "Status", FormatJqueryHandler = "validRow", MappingFrom = "LeaveStatus" }
        )
        .ToHtml()
    )
</div>

@section Scripts{
    <script type="text/javascript">
        $("#btn-search").click(function (e) {
            $("#register-leave-table").bootgrid("reload");
        });

        $("#btn-register").click(function (e) {
            location.assign("/registerleave");
        });

        var validRow = function (col, row) {
            return row[col.id];
        };

        $("#btn-approve").click(function (e) {
            e.preventDefault();
            toogleApprove("/leavemanagement/approve");
        })

        $("#btn-disapprove").click(function (e) {
            e.preventDefault();
            toogleApprove("/leavemanagement/disapprove");
        })

        var toogleApprove = function (urlCallback) {
            var selectedIds = $("#register-leave-table").bootgrid("getSelectedRows");
            if (selectedIds.length == 0) return;
            swal({
                title: "Confirm!",
                type: "info",
                text: "Do you want continue?",
                showCloseButton: true,
                showCancelButton: true,
                showConfirmButton: true,
                allowOutsideClick: true,
                showLoaderOnConfirm: true
            }).then(
                function () {
                   
                    var option = {
                        url: urlCallback,
                        data: { Uids: selectedIds },
                        type: "POST"
                    };
                    $.ajax(option)
                        .done(function (data) {
                            console.log(data);
                        })
                        .error(function (jhx) {
                            showAjaxError(jhx);
                        })
                },
                // handling the promise rejection
                function (dismiss) {
                    console.log("swal confirm closed");
                });
        }
    </script>
}